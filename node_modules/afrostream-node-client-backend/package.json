{
  "_args": [
    [
      {
        "raw": "afrostream-node-client-backend@git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
        "scope": null,
        "escapedName": "afrostream-node-client-backend",
        "name": "afrostream-node-client-backend",
        "rawSpec": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
        "spec": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
          "sshUrl": "git+ssh://git@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
          "httpsUrl": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
          "gitUrl": "git://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
          "shortcut": "github:Afrostream/afrostream-node-client-backend#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
          "directUrl": "https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@raw.githubusercontent.com/Afrostream/afrostream-node-client-backend/e7fa73543691944a52bfa1d75dde2bc17f0a06c2/package.json"
        }
      },
      "/Users/mr_freelo/Work/afrostream-admin"
    ]
  ],
  "_from": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#v3.2.0",
  "_id": "afrostream-node-client-backend@3.2.0",
  "_inCache": true,
  "_location": "/afrostream-node-client-backend",
  "_phantomChildren": {
    "better-assert": "1.0.2",
    "lodash": "4.17.2"
  },
  "_requested": {
    "raw": "afrostream-node-client-backend@git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
    "scope": null,
    "escapedName": "afrostream-node-client-backend",
    "name": "afrostream-node-client-backend",
    "rawSpec": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
    "spec": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
      "sshUrl": "git+ssh://git@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
      "httpsUrl": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
      "gitUrl": "git://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
      "shortcut": "github:Afrostream/afrostream-node-client-backend#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
      "directUrl": "https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@raw.githubusercontent.com/Afrostream/afrostream-node-client-backend/e7fa73543691944a52bfa1d75dde2bc17f0a06c2/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
  "_shasum": "c13e9a9c76dba336bfdf66ebae734597a7afe812",
  "_shrinkwrap": null,
  "_spec": "afrostream-node-client-backend@git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-client-backend.git#e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
  "_where": "/Users/mr_freelo/Work/afrostream-admin",
  "author": "",
  "dependencies": {
    "afrostream-node-config": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-config.git#v3.1.0",
    "afrostream-node-request": "git+https://afrostream-tech:39378b0626f1b2d4c733eeb5c5be73908b3c8c53@github.com/Afrostream/afrostream-node-request.git#v2.5.0",
    "better-assert": "^1.0.2",
    "http-proxy": "^1.15.1",
    "lodash": "^4.12.0",
    "q": "^1.4.1"
  },
  "description": "wrapper around the backend   this wrapper will handle backend api auth for you",
  "devDependencies": {
    "mocha": "^2.5.1"
  },
  "gitHead": "e7fa73543691944a52bfa1d75dde2bc17f0a06c2",
  "license": "ISC",
  "main": "index.js",
  "name": "afrostream-node-client-backend",
  "optionalDependencies": {},
  "readme": "# Description\n\nwrapper around the backend  \nthis wrapper will handle backend api auth for you  \n  \ndefault header behavior is :   \n - fwd user agent  \n - fwd user ip  \n - fwd content type  \n\n# Usage\n\n## create client\n\n```js\nvar Client = require('afrostream-node-client-backend');\nvar client = new Client({\n  apiKey: \"42424242\",\n  apiSecret: \"42424242\"\n});\n```\n\n## request the backend api\n\n```js\nclient.get('/api/movies')\n  .then(\n  function success(body) {\n    res.json(body);\n  },\n  function (error) {\n    res.status(error.statusCode).json({error: error.message});\n  });\nclient.get('/auth/geo').then(...);\nclient.post('...');\nclient.put('...');\nclient.delete('...');\n```\n\nyou can overwrite the oauth bearer token using options\n\n```js\nclient.get('/api/movies', { token: '42424242' }).then(function success(body) { });\n```\n\nyou can overwrite request options using options \n\n```js\nclient.get('/api/movies', { method: 'POST' }).then(...);\n```\n\n## request backend fwding input req infos\n\n```js\nclient.get('/api/movies', { req: req }).then(...); // will add x-forwarded-user-ip & content-type header\n```\n\n## request backend without auth\n\n```js\nclient.get('/api/movies', { token: null }).then(...);\n```\n\n## proxy requests to the backend\n\n```js\nclient.proxy(req, res);\n```\n\n```js\nclient.proxy(req, res, { qs: { foo: \"bar\" }, token: null });\n```\n\nproxy default behavior : do not follow redirect.\n\n## fwd response\n\n```js\nclient.get('/api/movies').nodeify(client.fwd(res));\n```\n\n## low level requests\n\n```js\nclient.request({uri:'/api/movies'}).then(function (data) {\n    var response = data[0];\n    var body = data[1];\n}, function (err) {\n    // network errors.\n    console.error(err.message);\n});\n```\n\n## high level requests\n\n```js\nclient.custom({method: 'GET', uri: '/api/movies'}).then(function (body) {\n    // only 200OK responses\n    console.log(body)\n}, function (err) {\n    // 403, 500, ... errors + network errors\n    res.status(err.statusCode).json({error: err.message});\n    console.error(err.message);\n});\n```",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha -b test/integration/"
  },
  "version": "3.2.0"
}
