{
  "_args": [
    [
      {
        "raw": "grunt-injector@https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
        "scope": null,
        "escapedName": "grunt-injector",
        "name": "grunt-injector",
        "rawSpec": "https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
        "spec": "https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
        "type": "remote"
      },
      "/Users/mr_freelo/Work/afrostream-admin"
    ]
  ],
  "_from": "grunt-injector@>=1.0.1 <2.0.0",
  "_id": "grunt-injector@1.1.0",
  "_inCache": true,
  "_location": "/grunt-injector",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-injector@https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
    "scope": null,
    "escapedName": "grunt-injector",
    "name": "grunt-injector",
    "rawSpec": "https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
    "spec": "https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
  "_shasum": "5a61113dc879393d7471787471c6e99858f85d1d",
  "_shrinkwrap": null,
  "_spec": "grunt-injector@https://registry.npmjs.org/grunt-injector/-/grunt-injector-1.1.0.tgz",
  "_where": "/Users/mr_freelo/Work/afrostream-admin",
  "author": {
    "name": "Joakim Carlstein",
    "email": "joakim@klei.se",
    "url": "http://joakim.beng.se"
  },
  "bugs": {
    "url": "https://github.com/klei/grunt-injector/issues"
  },
  "dependencies": {
    "lodash": "~4.15.0",
    "wiredep": "~4.0.0"
  },
  "description": "Inject references to files into other files (think scripts and stylesheets into an html file)",
  "devDependencies": {
    "grunt": "~1.0.0",
    "grunt-cli": "~1.2.0",
    "grunt-contrib-clean": "~1.0.0",
    "grunt-contrib-jshint": "~1.0.0",
    "grunt-contrib-nodeunit": "~1.0.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "homepage": "https://github.com/klei/grunt-injector",
  "keywords": [
    "gruntplugin",
    "inject",
    "stylesheets",
    "scripts",
    "index",
    "bower"
  ],
  "license": "MIT",
  "main": "Gruntfile.js",
  "name": "grunt-injector",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "readme": "# grunt-injector\r\n\r\n[![Build Status](https://api.travis-ci.org/klei/grunt-injector.svg?branch=master)](https://travis-ci.org/klei/grunt-injector)\r\n\r\n# Contributors are welcomed!\r\n\r\n**I don't have enough time to maintain this plugin as I would want to, so I'm looking for people who want to help out and be contributors/repository admins.**\r\n\r\n## Interested?\r\n\r\n**Contact me! See `package.json` for contact information.**\r\n\r\n> Inject references to files into other files (think scripts and stylesheets into an html file)\r\n\r\n## Getting Started\r\nCurrent plugin requires Grunt `~1.0.0` and supports node engine `>=0.10.0`.\r\n\r\nPlugin versions `v1.0.1 (and earlier)` require Grunt `>=0.4.x` and support node engine `>= 0.8.0`.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-injector --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-injector');\r\n```\r\n\r\n## The \"injector\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `injector` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  injector: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.template\r\nType: `String`\r\nDefaulting to `dest` property of file group\r\n\r\nThe filename for the source template where you have your injection tags.\r\nIf not provided, the given `dest` file must exist and will be used as source template as well, and therefor will be modified on injection.\r\n\r\n#### options.templateString\r\nType: `String`\r\nDefault value: `NULL`\r\n\r\nThe contents of the template to use. If specified it overrides the `template` option.\r\n\r\n#### options.ignorePath\r\nType: `String`|`Array`\r\nDefault value: `NULL`\r\n\r\nA path or paths that should be removed from each injected file path.\r\n\r\n#### options.addRootSlash\r\nType: `Boolean`\r\nDefault value: `!options.relative`\r\n\r\nSpecifies if a root slash (`/`) should be added to all paths.\r\n\r\n#### options.relative\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nSpecifies if relative paths should be injected.\r\n\r\n#### options.destFile\r\nType: `String`\r\nDefault value: `NULL`\r\n\r\nUsed to override the `dest` property of file groups, which is necessary when using [dynamically built files objects](http://gruntjs.com/configuring-tasks#building-the-files-object-dynamically).\r\n\r\n#### options.min\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nIf set to `true` each injected file will be switched to its minified counterpart (i.e. *.min.<ext> files), if it exists that is otherwise the original file is used as usual.\r\n\r\n#### options.starttag\r\nType: `String`\r\nDefault value: `<!-- injector:{{ext}} -->`\r\n\r\nSet the start tag that the injector is looking for. `{{ext}}` is replaced with file extension name, e.g. \"css\", \"js\" or \"html\".\r\nThe extension for files collected from from Bower components is prepended with option `bowerPrefix` if given.\r\n\r\n#### options.endtag\r\nType: `String`\r\nDefault value: `<!-- endinjector -->`\r\n\r\nSet the end tag that the injector is looking for. `{{ext}}` is replaced with file extension name, e.g. \"css\", \"js\" or \"html\".\r\nThe extension for files collected from from Bower components is prepended with option `bowerPrefix` if given.\r\n\r\n#### options.prefix\r\nType: `String`\r\nDefault value: `''`\r\n\r\nSet the prefix to append to the beginning of each injected file. Useful to change the directory name in combination with ignorePath.\r\n\r\n#### options.postfix\r\nType: `String`\r\nDefault value: `''`\r\n\r\nSet the postfix to append to the end of each injected file. Useful to reset cached resources like \"/path/to/script.js?offset01\".\r\n\r\n#### options.bowerPrefix\r\nType: `String`\r\nDefault value: `NULL`\r\n\r\nSet prefix for file extension when replacing `{{ext}}` in start and end tag (see above).\r\n**Added in v.0.5.0.** To keep old behaviour set this to \"bower:\". See *Bower dependency injection* below as well.\r\n\r\n#### options.lineEnding\r\nType: `String`\r\nDefault value: `null`\r\n\r\nConfigure what `lineEnding` character(s) to use between injections.\r\nIf no value specified, `grunt injector` will try to figure out the default line ending character(s) from template files.\r\n\r\n#### options.transform\r\nType: `Function`\r\nParams: `filepath`, `index` (0-based file index), `length` (total number of files to inject)\r\nDefault value: a function that returns:\r\n\r\n* For css files: `<link rel=\"stylesheet\" href=\"<filename>.css\">`\r\n* For js files: `<script src=\"<filename>.js\"></script>`\r\n* For html files: `<link rel=\"import\" href=\"<filename>.html\">`\r\n\r\nUsed to generate the content to inject for each file.\r\n\r\n#### options.sort\r\nType: `Function`\r\nParams: `a`, `b` (is used as `compareFunction` for [Array.prototype.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort))\r\nDefault value: `NULL`\r\n\r\nIf set the given function is used as the compareFunction for the array sort function, to sort the source files by.\r\n\r\n**N.B.** Shouldn't be used in conjunction with a `bower.json` file as source, because [wiredep](https://github.com/stephenplusplus/wiredep), which collects Bower installed dependencies, has some intelligent sorting built in.\r\n\r\n### Usage Examples\r\n\r\n#### Injecting into html file with default options\r\n\r\nindex.html:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Example</title>\r\n  <!-- injector:css -->\r\n  <!-- endinjector -->\r\n</head>\r\n<body>\r\n\r\n  <!-- injector:js -->\r\n  <!-- endinjector -->\r\n</body>\r\n</html>\r\n```\r\nGruntfile.js:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  injector: {\r\n    options: {},\r\n    local_dependencies: {\r\n      files: {\r\n        'index.html': ['**/*.js', '**/*.css'],\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n**After injection**\r\n\r\nindex.html:\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Example</title>\r\n  <!-- injector:css -->\r\n  <link rel=\"stylesheet\" href=\"file1.css\">\r\n  <link rel=\"stylesheet\" href=\"file2.css\">\r\n  <!-- endinjector -->\r\n</head>\r\n<body>\r\n\r\n  <!-- injector:js -->\r\n  <script src=\"file1.js\"></script>\r\n  <script src=\"file2.js\"></script>\r\n  <!-- endinjector -->\r\n</body>\r\n</html>\r\n```\r\n\r\n#### Bower dependency injection\r\n\r\nThe `grunt-injector` can be used to inject your installed Bower Components as well.\r\nTo do this the module [wiredep](https://github.com/stephenplusplus/wiredep) is used, and here's how the configuration can look like in that case:\r\n\r\n**N.B** From version **0.5.0** the `{{ext}}` in the starttag is not prefixed with `bower:` by default anymore! To keep the old behaviour set the `bowerPrefix` to \"bower:\".\r\n\r\nGruntfile.js:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  injector: {\r\n    options: {},\r\n    bower_dependencies: {\r\n      files: {\r\n        'index.html': ['bower.json'],\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nindex.html:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Example</title>\r\n  <!-- injector:css -->\r\n  <!-- endinjector -->\r\n</head>\r\n<body>\r\n\r\n  <!-- injector:js -->\r\n  <!-- endinjector -->\r\n</body>\r\n</html>\r\n```\r\n\r\n#### Other configurations\r\nFor more advanced task configurations see the `Gruntfile.js` in this repository and have a look at the tests in `test/injector_test.js`.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n\r\n**1.1.0** - 2016-10-10\r\n\r\n- Update dependencies and devDependencies ([#48](https://github.com/klei/grunt-injector/pull/48))\r\n- Fix [#51](https://github.com/klei/grunt-injector/issues/51)\r\n- Add `postfix` option \r\n\r\n**1.0.1** - 2016-05-20 - fix ([#41](https://github.com/klei/grunt-injector/issues/41))\r\n\r\n**1.0.0** - 2016-04-23\r\n\r\n- Update readme with travis badge (#44)\r\n- Adding prefix option (#42)\r\n- Update peerDependencies to support Grunt 1.0 \r\n- Make lineEnding default value to the destination file's line ending (#36)\r\n- Do not write empty lines (#34)\r\n\r\n**0.6.0** - 2014-11-26 - Adding `relative` option ([#15](https://github.com/klei/grunt-injector/pull/15))\r\n\r\n**0.5.4** - 2014-07-22 - Now able to handle overrides in `bower.json` ([#11](https://github.com/klei/grunt-injector/pull/11))\r\n\r\n**0.5.3** - 2014-07-16\r\n\r\n- Fixing `addRootSlash=false` problem with `ignorePath` [#10](https://github.com/klei/grunt-injector/issues/10)\r\n- Adding `lineEnding` option [#8](https://github.com/klei/grunt-injector/pull/8)\r\n- Clearing content before injection [#3](https://github.com/klei/grunt-injector/pull/3)\r\n- Allow multiple uses of `{{ext}}` in tags [#5](https://github.com/klei/grunt-injector/pull/5)\r\n\r\n**0.5.2** - 2014-03-05 - Getting bower components directory from `.bowerrc` file if it exists (Fixes: [#2](https://github.com/klei/grunt-injector/issues/2))\r\n\r\n**0.5.1** - 2014-02-21 - Adding `addRootSlash` option (Fixes: [#1](https://github.com/klei/grunt-injector/issues/1))\r\n\r\n**0.5.0** - 2013-12-29 - Removing the default `bower:` prefix for Bower injections (see *Bower dependency injection* above)\r\n\r\n**0.4.1** - 2013-12-23 - Fixing `index` and `length` params for `transform` function\r\n\r\n**0.4.0** - 2013-12-23 - Adding `templateString` option\r\n\r\n**0.3.1** - 2013-12-15 - Fixing possibility to provide ignorePath as array\r\n\r\n**0.3.0** - 2013-12-10 - Adding `sort` option to be able to sort files. Also rewriting for performance which removes unnecessary injections for dynamic file objects\r\n\r\n**0.2.0** - 2013-11-20 - Don't write to destination file if it hasn't been changed by the injector (useful to not trigger any unnecessary watch tasks if applicable)\r\n\r\n**0.1.2** - 2013-11-17 - Making it possible to only provide destFile and not template\r\n\r\n**0.1.1** - 2013-11-17 - ignorePath now only removes from start of path\r\n\r\n**0.1.0** - 2013-11-17 - First release\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/klei/grunt-injector.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.1.0"
}
